// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PI2EmAspNet.Data;

namespace PI2EmAspNet.Migrations
{
    [DbContext(typeof(AplicationContext))]
    [Migration("20200531012324_segunda")]
    partial class segunda
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("PI2EmAspNet.Models.Classificacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("NomeClassificacao")
                        .IsRequired()
                        .HasColumnType("varchar(5) CHARACTER SET utf8mb4")
                        .HasMaxLength(5);

                    b.HasKey("Id");

                    b.ToTable("classificacao");
                });

            modelBuilder.Entity("PI2EmAspNet.Models.Desenvolvedora", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("NomeDesenvolvedora")
                        .IsRequired()
                        .HasColumnType("varchar(30) CHARACTER SET utf8mb4")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("desenvolvedora");
                });

            modelBuilder.Entity("PI2EmAspNet.Models.Diretor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("NomeDiretor")
                        .IsRequired()
                        .HasColumnType("varchar(30) CHARACTER SET utf8mb4")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("diretor");
                });

            modelBuilder.Entity("PI2EmAspNet.Models.Genero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("NomeGenero")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("genero");
                });

            modelBuilder.Entity("PI2EmAspNet.Models.Jogo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("ClassificacaoId")
                        .HasColumnType("int");

                    b.Property<int?>("DesenvolvedoraId")
                        .HasColumnType("int");

                    b.Property<int?>("DiretorId")
                        .HasColumnType("int");

                    b.Property<int?>("ModoJogoId")
                        .HasColumnType("int");

                    b.Property<int?>("PlataformaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClassificacaoId");

                    b.HasIndex("DesenvolvedoraId");

                    b.HasIndex("DiretorId");

                    b.HasIndex("ModoJogoId");

                    b.HasIndex("PlataformaId");

                    b.ToTable("jogo");
                });

            modelBuilder.Entity("PI2EmAspNet.Models.JogoGenero", b =>
                {
                    b.Property<int>("JogoId")
                        .HasColumnType("int");

                    b.Property<int>("GeneroId")
                        .HasColumnType("int");

                    b.HasKey("JogoId", "GeneroId");

                    b.HasIndex("GeneroId");

                    b.ToTable("JogoGenero");
                });

            modelBuilder.Entity("PI2EmAspNet.Models.JogoPlataforma", b =>
                {
                    b.Property<int>("JogoId")
                        .HasColumnType("int");

                    b.Property<int>("PlataformaId")
                        .HasColumnType("int");

                    b.HasKey("JogoId", "PlataformaId");

                    b.HasIndex("PlataformaId");

                    b.ToTable("JogoPlataforma");
                });

            modelBuilder.Entity("PI2EmAspNet.Models.ModoJogo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("NomeModo")
                        .IsRequired()
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("modojogo");
                });

            modelBuilder.Entity("PI2EmAspNet.Models.Plataforma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("NomePlataforma")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("plataforma");
                });

            modelBuilder.Entity("PI2EmAspNet.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("PI2EmAspNet.Models.Sugestao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Sugestoes");
                });

            modelBuilder.Entity("PI2EmAspNet.Models.TipoUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("NomeTipo")
                        .IsRequired()
                        .HasColumnType("varchar(15) CHARACTER SET utf8mb4")
                        .HasMaxLength(15);

                    b.HasKey("Id");

                    b.ToTable("TipoUsuarios");
                });

            modelBuilder.Entity("PI2EmAspNet.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Apelido")
                        .IsRequired()
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int?>("TipoUsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Apelido")
                        .IsUnique();

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("TipoUsuarioId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("PI2EmAspNet.Models.Jogo", b =>
                {
                    b.HasOne("PI2EmAspNet.Models.Classificacao", "Classificacao")
                        .WithMany("Jogos")
                        .HasForeignKey("ClassificacaoId");

                    b.HasOne("PI2EmAspNet.Models.Desenvolvedora", "Desenvolvedora")
                        .WithMany("Jogos")
                        .HasForeignKey("DesenvolvedoraId");

                    b.HasOne("PI2EmAspNet.Models.Diretor", "Diretor")
                        .WithMany("Jogos")
                        .HasForeignKey("DiretorId");

                    b.HasOne("PI2EmAspNet.Models.ModoJogo", "ModoJogo")
                        .WithMany("Jogos")
                        .HasForeignKey("ModoJogoId");

                    b.HasOne("PI2EmAspNet.Models.Plataforma", null)
                        .WithMany("Jogos")
                        .HasForeignKey("PlataformaId");
                });

            modelBuilder.Entity("PI2EmAspNet.Models.JogoGenero", b =>
                {
                    b.HasOne("PI2EmAspNet.Models.Genero", "Genero")
                        .WithMany("JogoGeneros")
                        .HasForeignKey("GeneroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PI2EmAspNet.Models.Jogo", "Jogo")
                        .WithMany("JogoGeneros")
                        .HasForeignKey("JogoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PI2EmAspNet.Models.JogoPlataforma", b =>
                {
                    b.HasOne("PI2EmAspNet.Models.Jogo", "Jogo")
                        .WithMany("JogoPlataformas")
                        .HasForeignKey("JogoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PI2EmAspNet.Models.Plataforma", "Plataforma")
                        .WithMany("JogoPlataformas")
                        .HasForeignKey("PlataformaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PI2EmAspNet.Models.Review", b =>
                {
                    b.HasOne("PI2EmAspNet.Models.Usuario", "Usuario")
                        .WithMany("Reviews")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PI2EmAspNet.Models.Sugestao", b =>
                {
                    b.HasOne("PI2EmAspNet.Models.Usuario", "Usuario")
                        .WithMany("Sugestoes")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PI2EmAspNet.Models.Usuario", b =>
                {
                    b.HasOne("PI2EmAspNet.Models.TipoUsuario", "TipoUsuario")
                        .WithMany("Usuarios")
                        .HasForeignKey("TipoUsuarioId");
                });
#pragma warning restore 612, 618
        }
    }
}
